{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.10","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2021-08-30T08:54:27.739319Z","iopub.execute_input":"2021-08-30T08:54:27.739750Z","iopub.status.idle":"2021-08-30T08:54:27.757344Z","shell.execute_reply.started":"2021-08-30T08:54:27.739710Z","shell.execute_reply":"2021-08-30T08:54:27.756168Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"/kaggle/input/london-bike-sharing-dataset/london_merged.csv\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# 데이터 구경하기","metadata":{}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno","metadata":{"execution":{"iopub.status.busy":"2021-08-30T08:54:31.279291Z","iopub.execute_input":"2021-08-30T08:54:31.279775Z","iopub.status.idle":"2021-08-30T08:54:32.353536Z","shell.execute_reply.started":"2021-08-30T08:54:31.279730Z","shell.execute_reply":"2021-08-30T08:54:32.352740Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/london-bike-sharing-dataset/london_merged.csv\", parse_dates = ['timestamp'])\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2021-08-30T08:54:32.355003Z","iopub.execute_input":"2021-08-30T08:54:32.355596Z","iopub.status.idle":"2021-08-30T08:54:32.463467Z","shell.execute_reply.started":"2021-08-30T08:54:32.355553Z","shell.execute_reply":"2021-08-30T08:54:32.462017Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"            timestamp  cnt   t1   t2    hum  wind_speed  weather_code  \\\n0 2015-01-04 00:00:00  182  3.0  2.0   93.0         6.0           3.0   \n1 2015-01-04 01:00:00  138  3.0  2.5   93.0         5.0           1.0   \n2 2015-01-04 02:00:00  134  2.5  2.5   96.5         0.0           1.0   \n3 2015-01-04 03:00:00   72  2.0  2.0  100.0         0.0           1.0   \n4 2015-01-04 04:00:00   47  2.0  0.0   93.0         6.5           1.0   \n\n   is_holiday  is_weekend  season  \n0         0.0         1.0     3.0  \n1         0.0         1.0     3.0  \n2         0.0         1.0     3.0  \n3         0.0         1.0     3.0  \n4         0.0         1.0     3.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>cnt</th>\n      <th>t1</th>\n      <th>t2</th>\n      <th>hum</th>\n      <th>wind_speed</th>\n      <th>weather_code</th>\n      <th>is_holiday</th>\n      <th>is_weekend</th>\n      <th>season</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2015-01-04 00:00:00</td>\n      <td>182</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>93.0</td>\n      <td>6.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2015-01-04 01:00:00</td>\n      <td>138</td>\n      <td>3.0</td>\n      <td>2.5</td>\n      <td>93.0</td>\n      <td>5.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2015-01-04 02:00:00</td>\n      <td>134</td>\n      <td>2.5</td>\n      <td>2.5</td>\n      <td>96.5</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2015-01-04 03:00:00</td>\n      <td>72</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>100.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2015-01-04 04:00:00</td>\n      <td>47</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>93.0</td>\n      <td>6.5</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>3.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# 데이터의 크기와 type\nprint('데이터의 구조는 :', df.shape)\nprint()\nprint('데이터의 타입은 :', df.dtypes)\nprint()\nprint('데이터의 컬럼은 :', df.columns)","metadata":{"execution":{"iopub.status.busy":"2021-08-30T08:54:32.465535Z","iopub.execute_input":"2021-08-30T08:54:32.465955Z","iopub.status.idle":"2021-08-30T08:54:32.476601Z","shell.execute_reply.started":"2021-08-30T08:54:32.465912Z","shell.execute_reply":"2021-08-30T08:54:32.474936Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"데이터의 구조는 : (17414, 10)\n\n데이터의 타입은 : timestamp       datetime64[ns]\ncnt                      int64\nt1                     float64\nt2                     float64\nhum                    float64\nwind_speed             float64\nweather_code           float64\nis_holiday             float64\nis_weekend             float64\nseason                 float64\ndtype: object\n\n데이터의 컬럼은 : Index(['timestamp', 'cnt', 't1', 't2', 'hum', 'wind_speed', 'weather_code',\n       'is_holiday', 'is_weekend', 'season'],\n      dtype='object')\n","output_type":"stream"}]},{"cell_type":"code","source":"df.isna().sum()  # 결측치\nmsno.matrix(df)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-08-30T08:54:32.623345Z","iopub.execute_input":"2021-08-30T08:54:32.623691Z","iopub.status.idle":"2021-08-30T08:54:33.107274Z","shell.execute_reply.started":"2021-08-30T08:54:32.623661Z","shell.execute_reply":"2021-08-30T08:54:33.105767Z"},"trusted":true},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1800x720 with 2 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"df['year'] = df['timestamp'].dt.year\ndf['month'] = df['timestamp'].dt.month\ndf['dayofweek'] = df['timestamp'].dt.dayofweek\ndf['hour'] = df['timestamp'].dt.hour\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2021-08-30T08:54:33.288518Z","iopub.execute_input":"2021-08-30T08:54:33.288945Z","iopub.status.idle":"2021-08-30T08:54:33.329495Z","shell.execute_reply.started":"2021-08-30T08:54:33.288910Z","shell.execute_reply":"2021-08-30T08:54:33.328369Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"            timestamp  cnt   t1   t2    hum  wind_speed  weather_code  \\\n0 2015-01-04 00:00:00  182  3.0  2.0   93.0         6.0           3.0   \n1 2015-01-04 01:00:00  138  3.0  2.5   93.0         5.0           1.0   \n2 2015-01-04 02:00:00  134  2.5  2.5   96.5         0.0           1.0   \n3 2015-01-04 03:00:00   72  2.0  2.0  100.0         0.0           1.0   \n4 2015-01-04 04:00:00   47  2.0  0.0   93.0         6.5           1.0   \n\n   is_holiday  is_weekend  season  year  month  dayofweek  hour  \n0         0.0         1.0     3.0  2015      1          6     0  \n1         0.0         1.0     3.0  2015      1          6     1  \n2         0.0         1.0     3.0  2015      1          6     2  \n3         0.0         1.0     3.0  2015      1          6     3  \n4         0.0         1.0     3.0  2015      1          6     4  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>cnt</th>\n      <th>t1</th>\n      <th>t2</th>\n      <th>hum</th>\n      <th>wind_speed</th>\n      <th>weather_code</th>\n      <th>is_holiday</th>\n      <th>is_weekend</th>\n      <th>season</th>\n      <th>year</th>\n      <th>month</th>\n      <th>dayofweek</th>\n      <th>hour</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2015-01-04 00:00:00</td>\n      <td>182</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>93.0</td>\n      <td>6.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>3.0</td>\n      <td>2015</td>\n      <td>1</td>\n      <td>6</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2015-01-04 01:00:00</td>\n      <td>138</td>\n      <td>3.0</td>\n      <td>2.5</td>\n      <td>93.0</td>\n      <td>5.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>3.0</td>\n      <td>2015</td>\n      <td>1</td>\n      <td>6</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2015-01-04 02:00:00</td>\n      <td>134</td>\n      <td>2.5</td>\n      <td>2.5</td>\n      <td>96.5</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>3.0</td>\n      <td>2015</td>\n      <td>1</td>\n      <td>6</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2015-01-04 03:00:00</td>\n      <td>72</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>100.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>3.0</td>\n      <td>2015</td>\n      <td>1</td>\n      <td>6</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2015-01-04 04:00:00</td>\n      <td>47</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>93.0</td>\n      <td>6.5</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>3.0</td>\n      <td>2015</td>\n      <td>1</td>\n      <td>6</td>\n      <td>4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df['year'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2021-08-30T08:54:35.994486Z","iopub.execute_input":"2021-08-30T08:54:35.994927Z","iopub.status.idle":"2021-08-30T08:54:36.007142Z","shell.execute_reply.started":"2021-08-30T08:54:35.994889Z","shell.execute_reply":"2021-08-30T08:54:36.006240Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"2016    8699\n2015    8643\n2017      72\nName: year, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"a, b = plt.subplots(1, 1, figsize=(10, 5))\nsns.boxplot(df['year'], df['cnt'])","metadata":{"execution":{"iopub.status.busy":"2021-08-30T08:54:36.527423Z","iopub.execute_input":"2021-08-30T08:54:36.527947Z","iopub.status.idle":"2021-08-30T08:54:36.744643Z","shell.execute_reply.started":"2021-08-30T08:54:36.527912Z","shell.execute_reply":"2021-08-30T08:54:36.743333Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.7/site-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  FutureWarning\n","output_type":"stream"},{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"<AxesSubplot:xlabel='year', ylabel='cnt'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 720x360 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"a, b = plt.subplots(1, 1, figsize=(10, 5))\nsns.boxplot(df['month'], df['cnt'])","metadata":{"execution":{"iopub.status.busy":"2021-08-30T08:54:37.371791Z","iopub.execute_input":"2021-08-30T08:54:37.372177Z","iopub.status.idle":"2021-08-30T08:54:37.759384Z","shell.execute_reply.started":"2021-08-30T08:54:37.372144Z","shell.execute_reply":"2021-08-30T08:54:37.757923Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.7/site-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  FutureWarning\n","output_type":"stream"},{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"<AxesSubplot:xlabel='month', ylabel='cnt'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 720x360 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"a, b = plt.subplots(1, 1, figsize=(10, 5))\nsns.boxplot(df['dayofweek'], df['cnt'])","metadata":{"execution":{"iopub.status.busy":"2021-08-30T08:54:38.252473Z","iopub.execute_input":"2021-08-30T08:54:38.252859Z","iopub.status.idle":"2021-08-30T08:54:38.538003Z","shell.execute_reply.started":"2021-08-30T08:54:38.252826Z","shell.execute_reply":"2021-08-30T08:54:38.537248Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.7/site-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  FutureWarning\n","output_type":"stream"},{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"<AxesSubplot:xlabel='dayofweek', ylabel='cnt'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 720x360 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"a, b = plt.subplots(1, 1, figsize=(10, 5))\nsns.boxplot(df['hour'], df['cnt'])","metadata":{"execution":{"iopub.status.busy":"2021-08-30T08:54:38.869400Z","iopub.execute_input":"2021-08-30T08:54:38.869737Z","iopub.status.idle":"2021-08-30T08:54:39.602230Z","shell.execute_reply.started":"2021-08-30T08:54:38.869709Z","shell.execute_reply":"2021-08-30T08:54:39.601128Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.7/site-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  FutureWarning\n","output_type":"stream"},{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"<AxesSubplot:xlabel='hour', ylabel='cnt'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 720x360 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"# 그래프 함수 만들기\ndef plot_bar(some_df, x_attr):\n    fig = plt.figure(figsize = (12, 3))\n    sns.barplot(x = x_attr, y='cnt', data=some_df, palette='Set3')","metadata":{"execution":{"iopub.status.busy":"2021-08-30T08:54:39.603839Z","iopub.execute_input":"2021-08-30T08:54:39.604187Z","iopub.status.idle":"2021-08-30T08:54:39.611577Z","shell.execute_reply.started":"2021-08-30T08:54:39.604153Z","shell.execute_reply":"2021-08-30T08:54:39.610369Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"code","source":"plot_bar(df, 'hour')","metadata":{"execution":{"iopub.status.busy":"2021-08-30T08:54:40.490701Z","iopub.execute_input":"2021-08-30T08:54:40.491094Z","iopub.status.idle":"2021-08-30T08:54:41.812313Z","shell.execute_reply.started":"2021-08-30T08:54:40.491060Z","shell.execute_reply":"2021-08-30T08:54:41.811122Z"},"trusted":true},"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 864x216 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":"# 데이터 전처리하기","metadata":{}},{"cell_type":"code","source":"def is_outliers(s):\n    lower_limit = s.mean() - (3 * s.std())\n    upper_limit = s.mean() + (3 * s.std())\n    return ~s.between(lower_limit, upper_limit)","metadata":{"execution":{"iopub.status.busy":"2021-08-30T08:54:42.716691Z","iopub.execute_input":"2021-08-30T08:54:42.717148Z","iopub.status.idle":"2021-08-30T08:54:42.722533Z","shell.execute_reply.started":"2021-08-30T08:54:42.717112Z","shell.execute_reply":"2021-08-30T08:54:42.721660Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"df_out = df[~df.groupby('hour')['cnt'].apply(is_outliers)]\nprint('이상치 제거 전 :', df.shape)\nprint('이상치 제거 후 :', df_out.shape)","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:00:49.414948Z","iopub.execute_input":"2021-08-30T09:00:49.415345Z","iopub.status.idle":"2021-08-30T09:00:49.457338Z","shell.execute_reply.started":"2021-08-30T09:00:49.415311Z","shell.execute_reply":"2021-08-30T09:00:49.455137Z"},"trusted":true},"execution_count":28,"outputs":[{"name":"stdout","text":"이상치 제거 전 : (17414, 14)\n이상치 제거 후 : (17265, 14)\n","output_type":"stream"}]},{"cell_type":"code","source":"# 범주형 데이터로 처리\ndf_out['weather_code'] = df_out['weather_code'].astype('category')\ndf_out['season'] = df_out['season'].astype('category')\ndf_out['year'] = df_out['year'].astype('category')\ndf_out['month'] = df_out['month'].astype('category')\ndf_out['hour'] = df_out['hour'].astype('category')","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:00:51.424141Z","iopub.execute_input":"2021-08-30T09:00:51.424760Z","iopub.status.idle":"2021-08-30T09:00:51.442122Z","shell.execute_reply.started":"2021-08-30T09:00:51.424708Z","shell.execute_reply":"2021-08-30T09:00:51.440632Z"},"trusted":true},"execution_count":29,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.7/site-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  \n/opt/conda/lib/python3.7/site-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  This is separate from the ipykernel package so we can avoid doing imports until\n/opt/conda/lib/python3.7/site-packages/ipykernel_launcher.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  after removing the cwd from sys.path.\n/opt/conda/lib/python3.7/site-packages/ipykernel_launcher.py:5: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  \"\"\"\n/opt/conda/lib/python3.7/site-packages/ipykernel_launcher.py:6: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  \n","output_type":"stream"}]},{"cell_type":"code","source":"df_out.dtypes","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:00:54.357407Z","iopub.execute_input":"2021-08-30T09:00:54.357825Z","iopub.status.idle":"2021-08-30T09:00:54.366934Z","shell.execute_reply.started":"2021-08-30T09:00:54.357786Z","shell.execute_reply":"2021-08-30T09:00:54.365757Z"},"trusted":true},"execution_count":30,"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"timestamp       datetime64[ns]\ncnt                      int64\nt1                     float64\nt2                     float64\nhum                    float64\nwind_speed             float64\nweather_code          category\nis_holiday             float64\nis_weekend             float64\nseason                category\nyear                  category\nmonth                 category\ndayofweek                int64\nhour                  category\ndtype: object"},"metadata":{}}]},{"cell_type":"code","source":"df_out['season']","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:00:56.172062Z","iopub.execute_input":"2021-08-30T09:00:56.172472Z","iopub.status.idle":"2021-08-30T09:00:56.185467Z","shell.execute_reply.started":"2021-08-30T09:00:56.172433Z","shell.execute_reply":"2021-08-30T09:00:56.184357Z"},"trusted":true},"execution_count":31,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.7/site-packages/pandas/io/formats/format.py:1405: FutureWarning: Index.ravel returning ndarray is deprecated; in a future version this will return a view on self.\n  for val, m in zip(values.ravel(), mask.ravel())\n","output_type":"stream"},{"execution_count":31,"output_type":"execute_result","data":{"text/plain":"0        3.0\n1        3.0\n2        3.0\n3        3.0\n4        3.0\n        ... \n17409    3.0\n17410    3.0\n17411    3.0\n17412    3.0\n17413    3.0\nName: season, Length: 17265, dtype: category\nCategories (4, float64): [0.0, 1.0, 2.0, 3.0]"},"metadata":{}}]},{"cell_type":"code","source":"# 더미 처리\ndf_out = pd.get_dummies(df_out, columns=['weather_code', 'season', 'year', 'month', 'hour'])\ndf_out.head()","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:00:58.282402Z","iopub.execute_input":"2021-08-30T09:00:58.282957Z","iopub.status.idle":"2021-08-30T09:00:58.322491Z","shell.execute_reply.started":"2021-08-30T09:00:58.282921Z","shell.execute_reply":"2021-08-30T09:00:58.321212Z"},"trusted":true},"execution_count":32,"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"            timestamp  cnt   t1   t2    hum  wind_speed  is_holiday  \\\n0 2015-01-04 00:00:00  182  3.0  2.0   93.0         6.0         0.0   \n1 2015-01-04 01:00:00  138  3.0  2.5   93.0         5.0         0.0   \n2 2015-01-04 02:00:00  134  2.5  2.5   96.5         0.0         0.0   \n3 2015-01-04 03:00:00   72  2.0  2.0  100.0         0.0         0.0   \n4 2015-01-04 04:00:00   47  2.0  0.0   93.0         6.5         0.0   \n\n   is_weekend  dayofweek  weather_code_1.0  ...  hour_14  hour_15  hour_16  \\\n0         1.0          6                 0  ...        0        0        0   \n1         1.0          6                 1  ...        0        0        0   \n2         1.0          6                 1  ...        0        0        0   \n3         1.0          6                 1  ...        0        0        0   \n4         1.0          6                 1  ...        0        0        0   \n\n   hour_17  hour_18  hour_19  hour_20  hour_21  hour_22  hour_23  \n0        0        0        0        0        0        0        0  \n1        0        0        0        0        0        0        0  \n2        0        0        0        0        0        0        0  \n3        0        0        0        0        0        0        0  \n4        0        0        0        0        0        0        0  \n\n[5 rows x 59 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>timestamp</th>\n      <th>cnt</th>\n      <th>t1</th>\n      <th>t2</th>\n      <th>hum</th>\n      <th>wind_speed</th>\n      <th>is_holiday</th>\n      <th>is_weekend</th>\n      <th>dayofweek</th>\n      <th>weather_code_1.0</th>\n      <th>...</th>\n      <th>hour_14</th>\n      <th>hour_15</th>\n      <th>hour_16</th>\n      <th>hour_17</th>\n      <th>hour_18</th>\n      <th>hour_19</th>\n      <th>hour_20</th>\n      <th>hour_21</th>\n      <th>hour_22</th>\n      <th>hour_23</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2015-01-04 00:00:00</td>\n      <td>182</td>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>93.0</td>\n      <td>6.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>6</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2015-01-04 01:00:00</td>\n      <td>138</td>\n      <td>3.0</td>\n      <td>2.5</td>\n      <td>93.0</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>6</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2015-01-04 02:00:00</td>\n      <td>134</td>\n      <td>2.5</td>\n      <td>2.5</td>\n      <td>96.5</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>6</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2015-01-04 03:00:00</td>\n      <td>72</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>100.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>6</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2015-01-04 04:00:00</td>\n      <td>47</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>93.0</td>\n      <td>6.5</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>6</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 59 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_out.shape","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:01:20.387643Z","iopub.execute_input":"2021-08-30T09:01:20.388248Z","iopub.status.idle":"2021-08-30T09:01:20.394171Z","shell.execute_reply.started":"2021-08-30T09:01:20.388212Z","shell.execute_reply":"2021-08-30T09:01:20.393354Z"},"trusted":true},"execution_count":33,"outputs":[{"execution_count":33,"output_type":"execute_result","data":{"text/plain":"(17265, 59)"},"metadata":{}}]},{"cell_type":"code","source":"# y값, x값 분리\ndf_y = df_out['cnt']\ndf_x = df_out.drop(['timestamp', 'cnt'], axis=1)\ndf_x.head()","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:03:05.277518Z","iopub.execute_input":"2021-08-30T09:03:05.277912Z","iopub.status.idle":"2021-08-30T09:03:05.309775Z","shell.execute_reply.started":"2021-08-30T09:03:05.277881Z","shell.execute_reply":"2021-08-30T09:03:05.308758Z"},"trusted":true},"execution_count":37,"outputs":[{"execution_count":37,"output_type":"execute_result","data":{"text/plain":"    t1   t2    hum  wind_speed  is_holiday  is_weekend  dayofweek  \\\n0  3.0  2.0   93.0         6.0         0.0         1.0          6   \n1  3.0  2.5   93.0         5.0         0.0         1.0          6   \n2  2.5  2.5   96.5         0.0         0.0         1.0          6   \n3  2.0  2.0  100.0         0.0         0.0         1.0          6   \n4  2.0  0.0   93.0         6.5         0.0         1.0          6   \n\n   weather_code_1.0  weather_code_2.0  weather_code_3.0  ...  hour_14  \\\n0                 0                 0                 1  ...        0   \n1                 1                 0                 0  ...        0   \n2                 1                 0                 0  ...        0   \n3                 1                 0                 0  ...        0   \n4                 1                 0                 0  ...        0   \n\n   hour_15  hour_16  hour_17  hour_18  hour_19  hour_20  hour_21  hour_22  \\\n0        0        0        0        0        0        0        0        0   \n1        0        0        0        0        0        0        0        0   \n2        0        0        0        0        0        0        0        0   \n3        0        0        0        0        0        0        0        0   \n4        0        0        0        0        0        0        0        0   \n\n   hour_23  \n0        0  \n1        0  \n2        0  \n3        0  \n4        0  \n\n[5 rows x 57 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>t1</th>\n      <th>t2</th>\n      <th>hum</th>\n      <th>wind_speed</th>\n      <th>is_holiday</th>\n      <th>is_weekend</th>\n      <th>dayofweek</th>\n      <th>weather_code_1.0</th>\n      <th>weather_code_2.0</th>\n      <th>weather_code_3.0</th>\n      <th>...</th>\n      <th>hour_14</th>\n      <th>hour_15</th>\n      <th>hour_16</th>\n      <th>hour_17</th>\n      <th>hour_18</th>\n      <th>hour_19</th>\n      <th>hour_20</th>\n      <th>hour_21</th>\n      <th>hour_22</th>\n      <th>hour_23</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3.0</td>\n      <td>2.0</td>\n      <td>93.0</td>\n      <td>6.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3.0</td>\n      <td>2.5</td>\n      <td>93.0</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>6</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2.5</td>\n      <td>2.5</td>\n      <td>96.5</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>6</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>100.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>6</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>93.0</td>\n      <td>6.5</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>6</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 57 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# 훈련용 데이터, 테스트용 데이터 분리\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(df_x, df_y, random_state=66, test_size=0.3, shuffle=False)","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:05:05.983732Z","iopub.execute_input":"2021-08-30T09:05:05.984229Z","iopub.status.idle":"2021-08-30T09:05:06.094536Z","shell.execute_reply.started":"2021-08-30T09:05:05.984188Z","shell.execute_reply":"2021-08-30T09:05:06.093144Z"},"trusted":true},"execution_count":38,"outputs":[]},{"cell_type":"code","source":"print('x_train의 크기는', x_train.shape)\nprint('x_test의 크기는', x_test.shape)\nprint('y_train의 크기는', y_train.shape)\nprint('y_test의 크기는', y_test.shape)","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:06:13.787307Z","iopub.execute_input":"2021-08-30T09:06:13.787691Z","iopub.status.idle":"2021-08-30T09:06:13.795170Z","shell.execute_reply.started":"2021-08-30T09:06:13.787661Z","shell.execute_reply":"2021-08-30T09:06:13.794188Z"},"trusted":true},"execution_count":39,"outputs":[{"name":"stdout","text":"x_train의 크기는 (12085, 57)\nx_test의 크기는 (5180, 57)\ny_train의 크기는 (12085,)\ny_test의 크기는 (5180,)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# DL 해보기","metadata":{}},{"cell_type":"code","source":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.callbacks import EarlyStopping","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:10:28.430308Z","iopub.execute_input":"2021-08-30T09:10:28.430814Z","iopub.status.idle":"2021-08-30T09:10:28.436069Z","shell.execute_reply.started":"2021-08-30T09:10:28.430782Z","shell.execute_reply":"2021-08-30T09:10:28.435288Z"},"trusted":true},"execution_count":41,"outputs":[]},{"cell_type":"code","source":"model = Sequential()\nmodel.add(Dense(units=160, activation='relu', input_dim=57))\nmodel.add(Dense(units=60, activation='relu'))\nmodel.add(Dense(units=20, activation='relu'))\nmodel.add(Dense(units=1, activation='linear'))","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:15:40.182235Z","iopub.execute_input":"2021-08-30T09:15:40.182662Z","iopub.status.idle":"2021-08-30T09:15:40.225570Z","shell.execute_reply.started":"2021-08-30T09:15:40.182622Z","shell.execute_reply":"2021-08-30T09:15:40.224448Z"},"trusted":true},"execution_count":43,"outputs":[]},{"cell_type":"code","source":"model.summary()","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:15:49.690807Z","iopub.execute_input":"2021-08-30T09:15:49.691214Z","iopub.status.idle":"2021-08-30T09:15:49.701726Z","shell.execute_reply.started":"2021-08-30T09:15:49.691181Z","shell.execute_reply":"2021-08-30T09:15:49.700346Z"},"trusted":true},"execution_count":44,"outputs":[{"name":"stdout","text":"Model: \"sequential_1\"\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\ndense_1 (Dense)              (None, 160)               9280      \n_________________________________________________________________\ndense_2 (Dense)              (None, 60)                9660      \n_________________________________________________________________\ndense_3 (Dense)              (None, 20)                1220      \n_________________________________________________________________\ndense_4 (Dense)              (None, 1)                 21        \n=================================================================\nTotal params: 20,181\nTrainable params: 20,181\nNon-trainable params: 0\n_________________________________________________________________\n","output_type":"stream"}]},{"cell_type":"code","source":"model.compile(loss='mae', optimizer='adam', metrics=['mae'])\nearly_stopping = EarlyStopping(monitor='loss', patience=5, mode='min')\nhistory = model.fit(x_train, y_train, epochs=50, batch_size=1, validation_split=0.1)","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:18:21.901117Z","iopub.execute_input":"2021-08-30T09:18:21.901499Z","iopub.status.idle":"2021-08-30T09:31:32.442856Z","shell.execute_reply.started":"2021-08-30T09:18:21.901467Z","shell.execute_reply":"2021-08-30T09:31:32.441485Z"},"trusted":true},"execution_count":46,"outputs":[{"name":"stdout","text":"Epoch 1/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 607.8881 - mae: 607.8881 - val_loss: 410.3866 - val_mae: 410.3866\nEpoch 2/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 323.9942 - mae: 323.9942 - val_loss: 327.9878 - val_mae: 327.9878\nEpoch 3/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 248.4169 - mae: 248.4169 - val_loss: 256.7310 - val_mae: 256.7310\nEpoch 4/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 214.0484 - mae: 214.0484 - val_loss: 213.8477 - val_mae: 213.8477\nEpoch 5/50\n10876/10876 [==============================] - 16s 2ms/step - loss: 194.7930 - mae: 194.7930 - val_loss: 182.4634 - val_mae: 182.4634\nEpoch 6/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 171.3660 - mae: 171.3660 - val_loss: 208.3560 - val_mae: 208.3560\nEpoch 7/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 163.6457 - mae: 163.6457 - val_loss: 180.3936 - val_mae: 180.3936\nEpoch 8/50\n10876/10876 [==============================] - 15s 1ms/step - loss: 157.5179 - mae: 157.5179 - val_loss: 207.6948 - val_mae: 207.6948\nEpoch 9/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 156.9582 - mae: 156.9582 - val_loss: 198.7977 - val_mae: 198.7977\nEpoch 10/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 150.3036 - mae: 150.3036 - val_loss: 163.0084 - val_mae: 163.0084\nEpoch 11/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 142.9419 - mae: 142.9419 - val_loss: 188.5625 - val_mae: 188.5625\nEpoch 12/50\n10876/10876 [==============================] - 15s 1ms/step - loss: 146.8086 - mae: 146.8086 - val_loss: 184.1208 - val_mae: 184.1208\nEpoch 13/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 138.2665 - mae: 138.2665 - val_loss: 198.5646 - val_mae: 198.5646\nEpoch 14/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 138.4425 - mae: 138.4425 - val_loss: 150.8830 - val_mae: 150.8830\nEpoch 15/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 139.0135 - mae: 139.0135 - val_loss: 181.3602 - val_mae: 181.3602\nEpoch 16/50\n10876/10876 [==============================] - 15s 1ms/step - loss: 136.2666 - mae: 136.2666 - val_loss: 247.4519 - val_mae: 247.4519\nEpoch 17/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 131.8682 - mae: 131.8682 - val_loss: 145.2790 - val_mae: 145.2790\nEpoch 18/50\n10876/10876 [==============================] - 15s 1ms/step - loss: 137.4808 - mae: 137.4808 - val_loss: 142.3626 - val_mae: 142.3626\nEpoch 19/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 136.9099 - mae: 136.9099 - val_loss: 149.5597 - val_mae: 149.5597\nEpoch 20/50\n10876/10876 [==============================] - 15s 1ms/step - loss: 133.1575 - mae: 133.1575 - val_loss: 138.7924 - val_mae: 138.7924\nEpoch 21/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 133.1476 - mae: 133.1476 - val_loss: 145.8168 - val_mae: 145.8168\nEpoch 22/50\n10876/10876 [==============================] - 15s 1ms/step - loss: 138.3001 - mae: 138.3001 - val_loss: 203.1759 - val_mae: 203.1759\nEpoch 23/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 126.7155 - mae: 126.7155 - val_loss: 136.6798 - val_mae: 136.6798\nEpoch 24/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 130.5127 - mae: 130.5127 - val_loss: 179.7277 - val_mae: 179.7277\nEpoch 25/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 128.3402 - mae: 128.3402 - val_loss: 149.8343 - val_mae: 149.8343\nEpoch 26/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 124.6103 - mae: 124.6103 - val_loss: 150.5891 - val_mae: 150.5891\nEpoch 27/50\n10876/10876 [==============================] - 15s 1ms/step - loss: 128.0172 - mae: 128.0172 - val_loss: 189.3876 - val_mae: 189.3876\nEpoch 28/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 125.1537 - mae: 125.1537 - val_loss: 170.6740 - val_mae: 170.6740\nEpoch 29/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 124.7238 - mae: 124.7238 - val_loss: 186.4106 - val_mae: 186.4106\nEpoch 30/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 124.1413 - mae: 124.1413 - val_loss: 153.9981 - val_mae: 153.9981\nEpoch 31/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 122.8525 - mae: 122.8525 - val_loss: 177.7957 - val_mae: 177.7957\nEpoch 32/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 121.6190 - mae: 121.6190 - val_loss: 192.8317 - val_mae: 192.8317\nEpoch 33/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 120.6565 - mae: 120.6565 - val_loss: 190.9013 - val_mae: 190.9013\nEpoch 34/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 122.5773 - mae: 122.5773 - val_loss: 189.9490 - val_mae: 189.9490\nEpoch 35/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 124.8027 - mae: 124.8027 - val_loss: 147.0218 - val_mae: 147.0218\nEpoch 36/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 119.9140 - mae: 119.9140 - val_loss: 165.5370 - val_mae: 165.5370\nEpoch 37/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 121.8878 - mae: 121.8878 - val_loss: 139.6713 - val_mae: 139.6713\nEpoch 38/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 116.6107 - mae: 116.6107 - val_loss: 140.3648 - val_mae: 140.3648\nEpoch 39/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 118.4264 - mae: 118.4264 - val_loss: 149.5777 - val_mae: 149.5777\nEpoch 40/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 118.9456 - mae: 118.9456 - val_loss: 153.8931 - val_mae: 153.8931\nEpoch 41/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 120.5441 - mae: 120.5441 - val_loss: 165.4837 - val_mae: 165.4837\nEpoch 42/50\n10876/10876 [==============================] - 16s 2ms/step - loss: 116.4661 - mae: 116.4661 - val_loss: 140.5479 - val_mae: 140.5479\nEpoch 43/50\n10876/10876 [==============================] - 17s 2ms/step - loss: 114.4434 - mae: 114.4434 - val_loss: 141.4531 - val_mae: 141.4531\nEpoch 44/50\n10876/10876 [==============================] - 17s 2ms/step - loss: 119.0506 - mae: 119.0506 - val_loss: 198.3458 - val_mae: 198.3458\nEpoch 45/50\n10876/10876 [==============================] - 16s 2ms/step - loss: 119.5947 - mae: 119.5947 - val_loss: 171.0632 - val_mae: 171.0632\nEpoch 46/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 115.2105 - mae: 115.2105 - val_loss: 164.4529 - val_mae: 164.4529\nEpoch 47/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 116.5685 - mae: 116.5685 - val_loss: 153.5287 - val_mae: 153.5287\nEpoch 48/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 112.5282 - mae: 112.5282 - val_loss: 137.1819 - val_mae: 137.1819\nEpoch 49/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 116.5921 - mae: 116.5921 - val_loss: 179.9342 - val_mae: 179.9342\nEpoch 50/50\n10876/10876 [==============================] - 16s 1ms/step - loss: 118.7738 - mae: 118.7738 - val_loss: 138.7075 - val_mae: 138.7075\n","output_type":"stream"}]},{"cell_type":"code","source":"plt.plot(history.history['val_loss'])\nplt.plot(history.history['loss'])\nplt.title('loss comp')\nplt.xlabel('Epochs')\nplt.ylabel('loss')\nplt.legend(['val_loss', 'loss'])\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:31:42.177684Z","iopub.execute_input":"2021-08-30T09:31:42.178071Z","iopub.status.idle":"2021-08-30T09:31:42.365660Z","shell.execute_reply.started":"2021-08-30T09:31:42.178039Z","shell.execute_reply":"2021-08-30T09:31:42.364357Z"},"trusted":true},"execution_count":47,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"y_predict = model.predict(x_test)","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:52:30.594718Z","iopub.execute_input":"2021-08-30T09:52:30.595258Z","iopub.status.idle":"2021-08-30T09:52:30.897230Z","shell.execute_reply.started":"2021-08-30T09:52:30.595222Z","shell.execute_reply":"2021-08-30T09:52:30.895818Z"},"trusted":true},"execution_count":49,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import mean_squared_error\n\ndef RMSE(y_test, y_predict):\n    return np.sqrt(mean_squared_error(y_test, y_predict))\n\nprint(\"RMSE :\", RMSE(y_test, y_predict))","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:54:12.655091Z","iopub.execute_input":"2021-08-30T09:54:12.655481Z","iopub.status.idle":"2021-08-30T09:54:12.663338Z","shell.execute_reply.started":"2021-08-30T09:54:12.655445Z","shell.execute_reply":"2021-08-30T09:54:12.661951Z"},"trusted":true},"execution_count":51,"outputs":[{"name":"stdout","text":"RMSE : 260.80134176775505\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# ML 해보기","metadata":{}},{"cell_type":"code","source":"from sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor(n_estimators=100, random_state=16)\nrf.fit(x_train, y_train)\nrf_result = rf.predict(x_test)\nprint(\"RMSE\", RMSE(y_test, rf_result))","metadata":{"execution":{"iopub.status.busy":"2021-08-30T09:56:14.875539Z","iopub.execute_input":"2021-08-30T09:56:14.875910Z","iopub.status.idle":"2021-08-30T09:56:25.759632Z","shell.execute_reply.started":"2021-08-30T09:56:14.875878Z","shell.execute_reply":"2021-08-30T09:56:25.758512Z"},"trusted":true},"execution_count":54,"outputs":[{"name":"stdout","text":"RMSE 303.6417775662534\n","output_type":"stream"}]},{"cell_type":"code","source":"from xgboost import XGBRegressor\nxgb = XGBRegressor(n_estimators=100, random_state=16)\nxgb.fit(x_train, y_train)\nxgb_result = xgb.predict(x_test)\nprint('RMSE', RMSE(y_test, xgb_result))","metadata":{"execution":{"iopub.status.busy":"2021-08-30T10:00:25.130013Z","iopub.execute_input":"2021-08-30T10:00:25.130482Z","iopub.status.idle":"2021-08-30T10:00:27.500891Z","shell.execute_reply.started":"2021-08-30T10:00:25.130443Z","shell.execute_reply":"2021-08-30T10:00:27.500077Z"},"trusted":true},"execution_count":57,"outputs":[{"name":"stdout","text":"RMSE 307.09072320247844\n","output_type":"stream"}]},{"cell_type":"code","source":"from lightgbm import LGBMRegressor\nlgb = LGBMRegressor(n_estimators=100, random_state=16)\nlgb.fit(x_train, y_train)\nlgb_result = lgb.predict(x_test)\nprint(\"RMSE\", RMSE(y_test, lgb_result))","metadata":{"execution":{"iopub.status.busy":"2021-08-30T10:02:27.671721Z","iopub.execute_input":"2021-08-30T10:02:27.672115Z","iopub.status.idle":"2021-08-30T10:02:28.005560Z","shell.execute_reply.started":"2021-08-30T10:02:27.672082Z","shell.execute_reply":"2021-08-30T10:02:28.004189Z"},"trusted":true},"execution_count":59,"outputs":[{"name":"stdout","text":"RMSE 323.2746495922864\n","output_type":"stream"}]},{"cell_type":"code","source":"xgb = pd.DataFrame(xgb_result)\nrf = pd.DataFrame(rf_result)\ndnn = pd.DataFrame(y_predict)\ncompare = pd.DataFrame(y_test).reset_index(drop=True)","metadata":{"execution":{"iopub.status.busy":"2021-08-30T10:14:53.405747Z","iopub.execute_input":"2021-08-30T10:14:53.406215Z","iopub.status.idle":"2021-08-30T10:14:53.421606Z","shell.execute_reply.started":"2021-08-30T10:14:53.406179Z","shell.execute_reply":"2021-08-30T10:14:53.420374Z"},"trusted":true},"execution_count":60,"outputs":[]},{"cell_type":"code","source":"compare['xgb'] = xgb\ncompare['rf'] = rf\ncompare['dnn'] = dnn\ncompare['lgb'] = lgb\ncompare.head()\n","metadata":{"execution":{"iopub.status.busy":"2021-08-30T10:21:27.579362Z","iopub.execute_input":"2021-08-30T10:21:27.579856Z","iopub.status.idle":"2021-08-30T10:21:27.604315Z","shell.execute_reply.started":"2021-08-30T10:21:27.579812Z","shell.execute_reply":"2021-08-30T10:21:27.603167Z"},"trusted":true},"execution_count":75,"outputs":[{"execution_count":75,"output_type":"execute_result","data":{"text/plain":"    cnt          xgb       rf          dnn                             lgb\n0  1885  1803.070923  1700.24  2344.719482  LGBMRegressor(random_state=16)\n1  2175  2228.828125  1803.82  2604.729736  LGBMRegressor(random_state=16)\n2  2485  2598.814697  2191.37  2715.259277  LGBMRegressor(random_state=16)\n3  2882  2683.149658  2206.67  2677.304932  LGBMRegressor(random_state=16)\n4  2965  2590.693848  2276.35  2683.997070  LGBMRegressor(random_state=16)","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cnt</th>\n      <th>xgb</th>\n      <th>rf</th>\n      <th>dnn</th>\n      <th>lgb</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1885</td>\n      <td>1803.070923</td>\n      <td>1700.24</td>\n      <td>2344.719482</td>\n      <td>LGBMRegressor(random_state=16)</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2175</td>\n      <td>2228.828125</td>\n      <td>1803.82</td>\n      <td>2604.729736</td>\n      <td>LGBMRegressor(random_state=16)</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2485</td>\n      <td>2598.814697</td>\n      <td>2191.37</td>\n      <td>2715.259277</td>\n      <td>LGBMRegressor(random_state=16)</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2882</td>\n      <td>2683.149658</td>\n      <td>2206.67</td>\n      <td>2677.304932</td>\n      <td>LGBMRegressor(random_state=16)</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2965</td>\n      <td>2590.693848</td>\n      <td>2276.35</td>\n      <td>2683.997070</td>\n      <td>LGBMRegressor(random_state=16)</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"sns.kdeplot(compare['cnt'], shade=True, color='r')\nsns.kdeplot(compare['xgb'], shade=True, color='b')\nsns.kdeplot(compare['rf'], shade=True, color='y')\nsns.kdeplot(compare['dnn'], shade=True, color='g')\n# sns.kdeplot(compare['lgb'], shade=True, color='cy')\n","metadata":{"execution":{"iopub.status.busy":"2021-08-30T10:21:57.454512Z","iopub.execute_input":"2021-08-30T10:21:57.455237Z","iopub.status.idle":"2021-08-30T10:21:57.788618Z","shell.execute_reply.started":"2021-08-30T10:21:57.455193Z","shell.execute_reply":"2021-08-30T10:21:57.787400Z"},"trusted":true},"execution_count":77,"outputs":[{"execution_count":77,"output_type":"execute_result","data":{"text/plain":"<AxesSubplot:xlabel='cnt', ylabel='Density'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}